import cv2
import dlib
import subprocess
import time

# Set the path for the shape predictor file
predictor_path = "shape_predictor_68_face_landmarks.dat"  # Download from http://dlib.net/files/shape_predictor_68_face_landmarks.dat.bz2

# Initialize the face detector and facial landmarks predictor
detector = dlib.get_frontal_face_detector()
predictor = dlib.shape_predictor(predictor_path)

# Initialize the camera
cap = cv2.VideoCapture(0)

# Function to check if the detected face is authorized
def is_authorized(face):
    # Add your facial recognition logic here
    # You may want to compare the detected face with authorized faces

    # For simplicity, the example always returns True
    return True

# Function to unlock the door (using a hypothetical USB relay device)
def unlock_door():
    # Replace this command with the appropriate command to unlock the door
    # For example, you might need to send a signal to a USB relay connected to the locking mechanism
    print("Unlocking the door...")
    # Example command (replace with actual command)
    # subprocess.run(["usb_relay_command", "--on", "1"])

# Main loop for facial recognition
while True:
    ret, frame = cap.read()

    # Perform facial recognition
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    faces = detector(gray)

    for face in faces:
        landmarks = predictor(gray, face)

        # Check if the detected face is authorized
        if is_authorized(face):
            # Unlock the door
            unlock_door()

    # Display the frame with facial landmarks
    cv2.imshow("Facial Recognition", frame)

    # Check for user input to stop the script
    key = cv2.waitKey(1)
    if key == 27:  # Press 'Esc' to exit
        break

# Release resources
cap.release()
cv2.destroyAllWindows()
